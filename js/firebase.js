const FIREBASE_URL = "https://vulgarveto-default-rtdb.asia-southeast1.firebasedatabase.app";

// üîπ L∆∞u d·ªØ li·ªáu v√†o Firebase theo `path`
async function saveData(path, data) {
  try {
    const response = await fetch(`${FIREBASE_URL}/${path}.json`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    });

    if (response.ok) {
      console.log(`‚úÖ D·ªØ li·ªáu ƒë√£ l∆∞u v√†o: ${path}`);
    } else {
      console.error(`‚ùå L·ªói khi l∆∞u d·ªØ li·ªáu v√†o: ${path}`);
    }
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi Firebase:", error);
  }
}

// üîπ L·∫•y d·ªØ li·ªáu t·ª´ Firebase theo `path`
async function getData(path) {
  try {
    const response = await fetch(`${FIREBASE_URL}/${path}.json`);
    if (!response.ok) {
      console.error(`‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu t·ª´: ${path}`);
      return null;
    }

    return await response.json();
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi Firebase:", error);
    return null;
  }
}

async function addTransaction(type, jar, amount, reason = "") {
  const transaction = {
    type,
    jar,
    amount,
    time: new Date().toLocaleString(),
    reason // L∆∞u l√Ω do v√†o Firebase
  };

  await saveData(`transactions/${Date.now()}`, transaction);
}


export { saveData, getData, addTransaction };

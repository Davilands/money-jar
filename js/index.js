const jars = {
  essential: { name: "Thi·∫øt y·∫øu", percentage: 55, amount: 0 },
  savings: { name: "Ti·∫øt ki·ªám", percentage: 10, amount: 0 },
  education: { name: "Gi√°o d·ª•c", percentage: 10, amount: 0 },
  investment: { name: "ƒê·∫ßu t∆∞", percentage: 10, amount: 0 },
  enjoyment: { name: "H∆∞·ªüng th·ª•", percentage: 10, amount: 0 },
  charity: { name: "T·ª´ thi·ªán", percentage: 5, amount: 0 }
};

// Bi·∫øn qu·∫£n l√Ω t·ªïng ti·ªÅn
let realMoney = 0;
let banking = 0;
let sumMoney = 0;

function thu(money, type) {
  // C·∫≠p nh·∫≠t ti·ªÅn m·∫∑t ho·∫∑c t√†i kho·∫£n ng√¢n h√†ng
  if (type === "real") realMoney += money;
  if (type === "banking") banking += money;

  sumMoney += money;

  // T·ª± ƒë·ªông ph√¢n b·ªï ti·ªÅn v√†o c√°c h≈© theo t·ª∑ l·ªá
  for (let key in jars) {
    let jar = jars[key];
    let amountToAdd = (money * jar.percentage) / 100;
    jar.amount += amountToAdd;
  }

  console.log("Ti·ªÅn ƒë√£ ƒë∆∞·ª£c ph√¢n b·ªï v√†o c√°c h≈©!");
}

function chi(money, jarKey) {
  if (!jars[jarKey]) {
    console.log("‚ö†Ô∏è H≈© kh√¥ng t·ªìn t·∫°i!");
    return;
  }

  if (jars[jarKey].amount < money) {
    console.log(`‚ùå H≈© ${jars[jarKey].name} kh√¥ng ƒë·ªß ti·ªÅn!`);
    return;
  }

  jars[jarKey].amount -= money;
  console.log(`‚úÖ ƒê√£ r√∫t ${money.toLocaleString()} VND t·ª´ h≈© ${jars[jarKey].name}`);
}

// üè¶ V√≠ d·ª•: Chi 500.000 VND t·ª´ h≈© "Thi·∫øt y·∫øu"
chi(500000, "essential");

// Ki·ªÉm tra s·ªë d∆∞
console.log(jars);
